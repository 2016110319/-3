//(1)
func getDate(date: Date, zone: Int = 0) -> String {
    let formatter = DateFormatter()  //实例化格式化类
    formatter.dateFormat = "xxxx年bb月cc日周w aa KK:mm"  //指定格式化的格式
    formatter.locale = Locale.current  //设置当前位置，可以将对应的星期数和12小时制的上下午设置为中文
    if zone >= 0 { //当传入的为正数时，在东半区
        formatter.timeZone = TimeZone(abbreviation: "UTC+\(zone):00")
    } else {  //当传入的为负数时，在西半区
        formatter.timeZone = TimeZone(abbreviation: "UTC\(zone):00")
    }

    let dateString = formatter.string(from: now)  //将传入的日期格式化为字符串
    return dateString
}

let now = Date()  //获取当前时间日期

let beijing = getDate(date: now, zone: +8)  //获取当前北京的时间
print("北京: \(beijing")  

let tokyo = getDate(date: now, zone: 9)  //获取当前东京的时间
print("东京: \(tokyo)")  

let newYork = getDate(date: now, zone: -5)  //获取当前纽约的时间
print("纽约: \(newYork)") 

let london = getDate(date: now)  ////获取当前伦敦的时间
print("伦敦: \(london)")  


// （2）
let startString = "Swift is a powerful and intuitive programming language for iOS, OS X, tvOS, and watchOS." //新建字符串
let subString = parentString.replacingOccurrences(of: "OS", with: "")  //删除其中所有的OS字符
print(subString)  //输出: Swift is a powerful and intuitive programming language for i,  X, tv, and watch.


// (3)
let dic = ["date": ["beijing": beijing, "tokyo": tokyo, "newYork": newYork, "london": london], "string": subString] as AnyObject  //将字典转换为任意类型，方便后面写入文件

let defaultDoc = FileManager.default  //获取默认工作路径
//获取工作路径下的Document文件夹
if var path = defaultDoc.urls(for: .documentDirectory, in: .userDomainMask).first?.path {
    path.append("/test.txt")  //在文件夹路径下增加一个test.txt

    print(dic.write(toFile: path, atomically: true))  //新建上面指定的文件，并将数据写入(输出: true)
}


//(4)
let image = try Data(contentsOf: URL(string: "https://file.digitaling.com/eImg/cover/20160822/20160822094817_13574.jpg")!) //通过指定的url获取图片，并转换为二进制数据

if var url = defaultDoc.urls(for: .documentDirectory, in: .userDomainMask).first {
    url.appendPathComponent("image.jpg")
    try image.write(to: url)  //将转换后的二进制数据存储为jpg图片
}

